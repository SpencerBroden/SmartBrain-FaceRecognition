{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Logo","options","max","height","width","transform","opacity","alt","src","brain","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.eb73974c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\n            </nav>);\n    } else {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value});\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value});\n    }\n\n    onSubmitSignIn = () => {\n       fetch('https://calm-castle-28958.herokuapp.com/signin', {\n           method: 'post',\n           headers: {'Content-Type': 'application/json'},\n           body: JSON.stringify({\n               email: this.state.signInEmail,\n               password: this.state.signInPassword\n           })\n       })\n        .then(response => response.json())\n        .then(user => {\n            if(user.id) {\n                this.props.loadUser(user);\n                this.props.onRouteChange('home');\n            }\n        })\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"email\" \n                                    name=\"email-address\" \n                                    id=\"email-address\" \n                                    onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"password\" \n                                    name=\"password\" \n                                    id=\"password\" \n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input \n                            onClick={this.onSubmitSignIn}\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\" \n                            type=\"submit\" \n                            value=\"Sign in\" />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://calm-castle-28958.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n         .then(response => response.json())\n         .then(user => {\n             if(user.id) {\n                 this.props.loadUser(user)\n                 this.props.onRouteChange('home')\n             }\n         })\n     }\n\n    render() {\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"text\" \n                                    name=\"name\" \n                                    id=\"name\" \n                                    onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"email\" \n                                    name=\"email-address\" \n                                    id=\"email-address\" \n                                    onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"password\" \n                                    name=\"password\" \n                                    id=\"password\" \n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input\n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Register\" />\n                        </div>\n                    </div>\n                </main>\n            </article>\n\n        );\n    }\n}\n\nexport default Register;","import React  from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png'\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"center Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 250, width: 250 }} >\n                <div className=\"Tilt-inner pa3\">\n                    <img style={{transform: 'scaleX(-1)', opacity: '.6'}} alt='logo' src={brain}/> \n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\n\nexport default Logo;","import React  from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='f3'>\n                {`${name}, your current entries count is...`}\n            </div>\n            <div className='f1'>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\n\nexport default Rank;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className='f3'>\n        {'This Smart Brain will detect faces in your pictures. Give it a try.'}\n      </p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\n          <button\n            className='button w-30 grow f4 link ph3 pv2 dib white'\n            onClick={onButtonSubmit}\n          >Detect</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://calm-castle-28958.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://calm-castle-28958.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log())\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/brain.d775676b.png\";"],"sourceRoot":""}